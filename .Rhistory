library(BINSEG)
library(BINSEG)
usethis::use_rcpp()
Rcpp::compileAttributes()
Rcpp::compileAttributes(".")
install.packages("pkgbuild")
library(BINSEG)
library(BINSEG)
library(BINSEG)
x <- c(0.1, 0, 1, 1.1, 0.1, 0)
(models.dt <- BINSEG::BINSEG(x)
)
x <- BINSEG(x)
model.dt <- BINSEG::rcpp_BINSEG(x)
model.dt <- binsegRcpp::binseg_normal(x)
model.dt
library(BINSEG)
model.dt <- BINSEG::BINSEG(x)
library(BINSEG)
library(BINSEG)
x <- c(0.1, 0, 1, 1.1, 0.1, 0)
model.dt <- BINSEG::apply.binseg(x, 2)
library(BINSEG)
model.dt <- BINSEG::apply.binseg(x, 2)
library(BINSEG)
apply.binseg <- function(data.vec, max.segments = length(data.vec)) {
result <- rcpp_BINSEG(data.vec, max.segments)
na <- function(x)
ifelse(x < 0, NA, x)
dt <- with(
result,
data.table(
segments = 1:max.segments,
loss = sum(data.vec ^ 2) + loss,
end = end + 1L,
before.mean,
after.mean = ifelse(after.mean == Inf, NA, after.mean),
before.size,
after.size = na(after.size),
invalidates.index = na(invalidates.index + 1L),
invalidates.after = na(invalidates.after)
)
)
class(dt) <- c("BINSEG", class(dt))
dt
}
apply.binseg(x)
apply.binseg <- function(data.vec, max.segments = length(data.vec)) {
result <- BINSEG::rcpp_BINSEG(data.vec, max.segments)
na <- function(x)
ifelse(x < 0, NA, x)
dt <- with(
result,
data.table(
segments = 1:max.segments,
loss = sum(data.vec ^ 2) + loss,
end = end + 1L,
before.mean,
after.mean = ifelse(after.mean == Inf, NA, after.mean),
before.size,
after.size = na(after.size),
invalidates.index = na(invalidates.index + 1L),
invalidates.after = na(invalidates.after)
)
)
class(dt) <- c("BINSEG", class(dt))
dt
}
apply.binseg(x)
library(BINSEG)
BINSEG::apply_binseg(x)
BINSEG::apply_binseg(x, 3)
model.dt <- BINSEG::apply_binseg(x, 3)
View(model.dt)
library(BINSEG)
usethis::use_test("apply_binseg")
result <- apply_binseg(x,3)
result
View(result)
result$loss
length(result$loss)
expect_equal(length(result$loss), 3)
library(BINSEG)
